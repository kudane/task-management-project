{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/delete/task/:taskId": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Task"
                            }
                        }
                    }
                }
            }
        },
        "/edit/task": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Task"
                            }
                        }
                    }
                }
            }
        },
        "/list/priority": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Priority"
                            }
                        }
                    }
                }
            }
        },
        "/list/task": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Task"
                            }
                        }
                    }
                }
            }
        },
        "/list/task/:taskId": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Task"
                        }
                    }
                }
            }
        },
        "/list/type": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Type"
                            }
                        }
                    }
                }
            }
        },
        "/new/task": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/data.Task"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.Priority": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "data.Task": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priorityId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "typeId": {
                    "type": "integer"
                }
            }
        },
        "data.Type": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}